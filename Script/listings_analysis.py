# -*- coding: utf-8 -*-
"""listings_analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XtGBXrIJEGYyqHur2YrU655Tn_Ngst5E
"""

import pandas as pd
import csv
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import LabelEncoder

mkdir img

# Cargar Archivo CSV
# listings
df = pd.read_csv('/content/airbnb_cleaned.csv', encoding="utf-8", on_bad_lines="skip")

"""**Análisis de Rentabilidad y Factores Clave**

**Relación entre precio y ganancia anual**
"""

# Configurar el gráfico
plt.figure(figsize=(10, 6))
sns.scatterplot(data=df, x="price", y="ganancia_anual", hue="room_type", alpha=0.5)
sns.regplot(data=df, x="price", y="ganancia_anual", scatter=False, color="red")

# Etiquetas y título
plt.title("Relación entre Precio por Noche y Ganancia Anual segun el Tipo de Habitacion")
plt.xlabel("Precio por Noche (MXN)")
plt.ylabel("Ganancia Anual Estimada (MXN)")
plt.grid(True)

# Guardar el gráfico como imagen
plt.savefig("img/precio_vs_ganancia_anual.png", dpi=300)

# Mostrar
plt.show()

"""**Impacto de la tasa de ocupación**"""

# Configurar gráfico
plt.figure(figsize=(10, 6))
sns.scatterplot(data=df, x="tasa_de_ocupacion", y="ganancia_anual", hue="room_type", alpha=0.5)
sns.regplot(data=df, x="tasa_de_ocupacion", y="ganancia_anual", scatter=False, color="red")
plt.title("Impacto de la Tasa de Ocupación en la Ganancia Anual segun el Tipo de Habitacion")
plt.xlabel("Tasa de Ocupación (%)")
plt.ylabel("Ganancia Anual (MXN)")
plt.grid(True)

# Guardar el gráfico como imagen
plt.savefig("img/impacto_tasa_ocupacion.png", dpi=300)

# Mostrar el gráfico
plt.show()

"""**Efecto de las reseñas a la rentabilidad**"""

# Configurar gráfico
plt.figure(figsize=(10, 6))
sns.scatterplot(data=df, x="number_of_reviews_ltm", y="ganancia_anual", alpha=0.5, color="royalblue")
sns.regplot(data=df, x="number_of_reviews_ltm", y="ganancia_anual", scatter=False, color="red")
plt.title("Impacto de las Reseñas en la Rentabilidad")
plt.xlabel("Número de Reseñas (Últimos 12 Meses)")
plt.ylabel("Ganancia Anual (MXN)")
plt.grid(True)

# Guardar y mostrar
plt.savefig("img/impacto_reseñas_rentabilidad.png", dpi=300)
plt.show()

"""**Relación entre la cantidad de amenidades y la ganancia anual**"""

# Configurar el gráfico
plt.figure(figsize=(10, 6))
sns.scatterplot(data=df, x="total_amenities", y="ganancia_anual", hue="room_type", alpha=0.6, palette="viridis")
plt.title("Relación entre la Cantidad de Amenidades y la Ganancia Anual")
plt.xlabel("Número de Amenidades")
plt.ylabel("Ganancia Anual (MXN)")
plt.legend(title="Tipo de Habitación")
plt.grid(True)

# Guardar y mostrar
plt.savefig("img/impacto_amenidades_rentabilidad.png", dpi=300)
plt.show()

"""**Comparación de Zonas y Tipos de Propiedades**

**Rango de precios por zona**
"""

# Configurar grafico
plt.figure(figsize=(14, 7))
sns.boxplot(data=df, x="neighbourhood_cleansed", y="price", palette="viridis")
plt.xticks(rotation=90)
plt.title("Rango de Precios por Zona")
plt.xlabel("Zona")
plt.ylabel("Precio")

# Guardar y mostrar
plt.savefig("img/rango_precios_zona_tipo.png", dpi=300)
plt.show()

"""**Comparación entre precios altos vs. bajos y su impacto en la ocupación**"""

plt.figure(figsize=(12, 6))

# Dividir precios en categorías (Altos/Bajos)
df["categoria_precio"] = pd.qcut(df["price"], q=2, labels=["Bajo", "Alto"])

# Scatter plot con regresión
sns.lmplot(data=df, x="price", y="tasa_de_ocupacion", hue="categoria_precio", palette="coolwarm", aspect=1.5)
plt.title("Comparación entre Precios Altos vs. Bajos y su Impacto en la Ocupación")
plt.xlabel("Precio")
plt.ylabel("Tasa de Ocupación")

# Guardar y mostrar
plt.savefig("img/comparacion_precio_ocupacion.png", dpi=300)
plt.show()

"""**Conclusiones y Recomendaciones Finales**

**Mejores zonas para invertir**
"""

# Agrupar los datos por zona y calcular las métricas
zonas_inversion = df.groupby("neighbourhood_cleansed").agg({
    "ganancia_anual": "mean",
    "dias_rentados": "mean",
    "tasa_de_ocupacion": "mean",
    "price": "mean",
    "number_of_reviews_ltm": "mean"
}).reset_index()

# Renombrar columnas
zonas_inversion.columns = [
    "Zona", "Ganancia Anual Promedio", "Días Rentados Promedio",
    "Tasa de Ocupación", "Precio Promedio por Noche", "Número de Reseñas Promedio"
]

# Normalizar las métricas para poder compararlas
from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()
zonas_inversion[["Ganancia Anual Promedio", "Días Rentados Promedio",
                 "Tasa de Ocupación", "Precio Promedio por Noche",
                 "Número de Reseñas Promedio"]] = scaler.fit_transform(
    zonas_inversion[["Ganancia Anual Promedio", "Días Rentados Promedio",
                     "Tasa de Ocupación", "Precio Promedio por Noche",
                     "Número de Reseñas Promedio"]]
)

# Calcular una puntuación de inversión combinando todas las métricas
zonas_inversion["Puntuación de Inversión"] = (
    (zonas_inversion["Ganancia Anual Promedio"] * 0.4) +
    (zonas_inversion["Días Rentados Promedio"] * 0.2) +
    (zonas_inversion["Tasa de Ocupación"] * 0.2) +
    (zonas_inversion["Número de Reseñas Promedio"] * 0.2)
)

# Ordenar las mejores zonas para invertir
zonas_inversion = zonas_inversion.sort_values(by="Puntuación de Inversión", ascending=False)

# Graficar
plt.figure(figsize=(12, 7))
sns.barplot(x=zonas_inversion["Puntuación de Inversión"], y=zonas_inversion["Zona"], palette="magma")
plt.title("Mejores Zonas para Invertir en Airbnb (Puntuación Combinada)")
plt.xlabel("Puntuación de Inversión")
plt.ylabel("Zona")
plt.savefig("img/mejores_zonas_inversion_combinadas.png", dpi=300)
plt.show()

"""**Mejor tipo de habitación para rentabilidad**"""

plt.figure(figsize=(10, 6))

# Calcular la rentabilidad promedio por tipo de habitación
rentabilidad_tipo = df.groupby("room_type")["ganancia_anual"].mean().sort_values(ascending=False)

# Graficar
sns.barplot(x=rentabilidad_tipo.index, y=rentabilidad_tipo.values, palette="viridis")
plt.title("Rentabilidad Promedio por Tipo de Habitación")
plt.xlabel("Tipo de Habitación")
plt.ylabel("Ganancia Anual Promedio")

# Guardar y mostrar
plt.savefig("img/mejor_tipo_habitacion_rentabilidad.png", dpi=300)
plt.show()

"""**Estrategias para Mejorar la Ocupación y Precios**"""

plt.figure(figsize=(12, 6))

# Variables clave para analizar ocupación y precios
variables_estrategias = ["tasa_de_ocupacion", "price", "review_scores_rating", "total_amenities", "ganancia_anual"]
correlation_matrix = df[variables_estrategias].corr()

# Graficar Heatmap
sns.heatmap(correlation_matrix, annot=True, cmap="coolwarm", fmt=".2f", linewidths=0.5)
plt.title("Factores Clave para Mejorar la Ocupación y Rentabilidad")

# Guardar y mostrar
plt.savefig("img/estrategias_mejorar_ocupacion_precios.png", dpi=300)
plt.show()

# Configura tu nombre y correo (solo la primera vez)
!git config --global user.name "MariaJoseAlmeyda"
!git config --global user.email "almeydamariajose74@gmail.com"

# Clona tu repositorio
!git clone https://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@github.com/MariaJoseAlmeyda/Airbnb-CDMX-Analysis.git

# Commented out IPython magic to ensure Python compatibility.
# %cd Airbnb-CDMX-Analysis

!git add img/
!git commit -m "Añadidas imágenes generadas automáticamente"
!git push origin main